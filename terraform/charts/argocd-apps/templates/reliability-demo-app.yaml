apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: reliability-demo
  namespace: argocd
  finalizers:
    - resources-finalizer.argocd.argoproj.io
spec:
  project: default
  source:
    repoURL: {{ .Values.spec.source.repoURL }}
    targetRevision: {{ .Values.spec.source.targetRevision }}
    path: helm/app
    helm:
      values: |
        # Architecture configuration for ARM64 images
        architecture:
          nodeArch: "arm64"
        
        # Web API configuration  
        web:
          replicaCount: 6
          image:
            repository: sixeyed/reliability-demo
            tag: "m1-01"
            pullPolicy: Always
          service:
            type: LoadBalancer
            port: 8080
          resources:
            requests:
              memory: "256Mi"
              cpu: "200m"
            limits:
              memory: "512Mi"
              cpu: "500m"
          livenessProbe:
            httpGet:
              path: /api/health
              port: 8080
            initialDelaySeconds: 30
            periodSeconds: 10
            timeoutSeconds: 5
            failureThreshold: 3
          readinessProbe:
            httpGet:
              path: /api/health
              port: 8080
            initialDelaySeconds: 10
            periodSeconds: 5
            timeoutSeconds: 3
            failureThreshold: 3
          podDisruptionBudget:
            enabled: true
            minAvailable: 50%
          autoscaling:
            enabled: true
            minReplicas: 6
            maxReplicas: 20
            targetCPUUtilizationPercentage: 80
            targetMemoryUtilizationPercentage: 80
        
        # Worker configuration
        worker:
          replicaCount: 2
          image:
            repository: sixeyed/reliability-demo-worker
            tag: "m1-01"
            pullPolicy: Always
          resources:
            requests:
              memory: "128Mi"
              cpu: "100m"
            limits:
              memory: "256Mi"
              cpu: "200m"
          livenessProbe:
            exec:
              command:
              - /bin/sh
              - -c
              - "ps aux | grep -v grep | grep -q dotnet"
            initialDelaySeconds: 30
            periodSeconds: 10
            timeoutSeconds: 5
            failureThreshold: 3
          podDisruptionBudget:
            enabled: true
            minAvailable: 1
          autoscaling:
            enabled: true
            minReplicas: 2
            maxReplicas: 10
            targetCPUUtilizationPercentage: 70
            targetMemoryUtilizationPercentage: 70
        
        # Application configuration
        config:
          failureConfig:
            enabled: true
            connectionFailureRate: 0.1
            readTimeoutRate: 0.5
            writeTimeoutRate: 0.3
            slowResponseRate: 0.1
            readTimeoutMs: 1000
            writeTimeoutMs: 1000
            slowResponseDelayMs: 3000
          sqlServerDataStore:
            maxConcurrentClients: 2
            autoMigrate: true
          distributedCache:
            enabled: true
            expirationSeconds: 300
          customerOperation:
            pattern: "Async"  # Enable async pattern for worker
          messaging:
            createCustomerQueueName: "customer_create_queue"
            updateCustomerQueueName: "customer_update_queue"
            deleteCustomerQueueName: "customer_delete_queue"
            retryAttempts: 3
            retryDelayMs: 1000
        
        # Redis dependency configuration (enabled for async pattern)
        redis:
          enabled: true  # Enable Redis for caching and messaging
          auth:
            enabled: false
          master:
            persistence:
              enabled: true
              size: 1Gi
          replica:
            replicaCount: 2
            persistence:
              enabled: false
        
        # SQL Server configuration
        sqlserver:
          enabled: true
          image:
            repository: mcr.microsoft.com/mssql/server
            tag: 2022-latest
          auth:
            saPassword: "YourStrong@Passw0rd"
          persistence:
            enabled: true
            size: 2Gi
  
  destination:
    server: https://kubernetes.default.svc
    namespace: reliability-demo
  
  syncPolicy:
    automated:
      prune: true
      selfHeal: true
      allowEmpty: false
    syncOptions:
      - CreateNamespace=true
      - PrunePropagationPolicy=foreground
      - PruneLast=true
    retry:
      limit: 5
      backoff:
        duration: 5s
        factor: 2
        maxDuration: 3m
  
  revisionHistoryLimit: 10